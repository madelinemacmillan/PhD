{
   "created_at" : "20220322T194540Z",
   "seed_file" : "../open_studio_model.osm",
   "steps" : 
   [
      {
         "arguments" : {},
         "description" : "Often the eplusout.err file may request output diagnostics. This measure can be used to add this to the IDF file. Re-run your project to see the requested output.",
         "measure_dir_name" : "AddOutputDiagnostics",
         "modeler_description" : "Makes Output:Diagnostics object with choice list for optional values:, DisplayAllWarnings, DisplayExtraWarnings, DisplayUnusedSchedules, DisplayUnusedObjects, DisplayAdvancedReportVariables, DisplayZoneAirHeatBalanceOffBalance, DoNotMirrorDetachedShading, DisplayWeatherMissingDataWarnings, ReportDuringWarmup, ReportDetailedWarmupConvergence.",
         "name" : "Add Output Diagnostics"
      },
      {
         "arguments" : {},
         "description" : "This measure creates high level tables and charts pulling both from model inputs and EnergyPlus results. It has building level information as well as detail on space types, thermal zones, HVAC systems, envelope characteristics, and economics. Click the heading above a chart to view a table of the chart data.",
         "measure_dir_name" : "OpenStudioResults",
         "modeler_description" : "For the most part consumption data comes from the tabular EnergyPlus results, however there are a few requests added for time series results. Space type and loop details come from the OpenStudio model. The code for this is modular, making it easy to use as a template for your own custom reports. The structure of the report uses bootstrap, and the graphs use dimple js. The new measure warning section will show warnings generated by upstream measures. It will not show forward translation warnings, EnergyPlus warnings, or warnings that might be reported by this measure.",
         "name" : "OpenStudio Results"
      },
      {
         "arguments" : {},
         "description" : "This measure creates high level tables and charts pulling both from model inputs and EnergyPlus results. It has building level information as well as detail on space types, thermal zones, HVAC systems, envelope characteristics, and economics. Click the heading above a chart to view a table of the chart data.",
         "measure_dir_name" : "OpenStudioResults",
         "modeler_description" : "For the most part consumption data comes from the tabular EnergyPlus results, however there are a few requests added for time series results. Space type and loop details come from the OpenStudio model. The code for this is modular, making it easy to use as a template for your own custom reports. The structure of the report uses bootstrap, and the graphs use dimple js. The new measure warning section will show warnings generated by upstream measures. It will not show forward translation warnings, EnergyPlus warnings, or warnings that might be reported by this measure.",
         "name" : "OpenStudio Results 1"
      },
      {
         "arguments" : {},
         "description" : "Creates an interactive timeseries plot of selected variable.",
         "measure_dir_name" : "TimeseriesPlot",
         "modeler_description" : "NOTE: This will load and respond slowly in the OS app, especially if you select * on a variable with many possible keys or you select timestep data.  Suggest you open it in a web browser like Chrome instead.",
         "name" : "Timeseries Plot"
      },
      {
         "arguments" : {},
         "description" : "Exports an OutputMeter specified in the AddOutputMeter OpenStudio measure to a csv file.",
         "measure_dir_name" : "ExportMetertoCSV",
         "modeler_description" : "This measure searches for the OutputMeter name in the eplusout sql file and saves it to a csv file.",
         "name" : "ExportMetertoCSV"
      },
      {
         "arguments" : {},
         "description" : "Visualize energy simulation data plotted on an OpenStudio model in a web based viewer",
         "measure_dir_name" : "ViewData",
         "modeler_description" : "Converts the OpenStudio model to vA3C JSON format and renders using Three.js, simulation data is applied to surfaces of the model",
         "name" : "ViewData"
      }
   ],
   "updated_at" : "20220324T192036Z",
   "weather_file" : "Red_Bluff.epw"
}